
__author__ = 'Травин Андрей'

# Задача-1: Дано произвольное целое число, вывести самую большую цифру этого числа.
# Например, дается x = 58375.
# Нужно вывести максимальную цифру в данном числе, т.е. 8.
# Подразумевается, что мы не знаем это число заранее.
# Число приходит в виде целого беззнакового.



x = int(input('введите число'))
# функция input получает строку
max_x=0
while x>0:
    c=x%10
# Возвращает остаток от деления, то есть последнюю цифру текущего числа
    if c>=max_x: max_x=c
    x//=10
# Возвращает целочисленное частное от деления, то есть отрезает последнюю цифру от числа
print(max_x)


# Задача-2: Исходные значения двух переменных запросить у пользователя.
# Поменять значения переменных местами. Вывести новые значения на экран.
# Решите задачу, используя только две переменные.

a = input("Введите первое число")
b = input("Введите второе число")
print("Исходные значения переменных: " + a + ',' + b)
a, b = b, a
print("Значения после замены: " + b + ',' + a)

# задача выполняется, но почему-то дважды спрашивается первое число. Понять в чем тут дело, не смог.

# Задача-3: Напишите программу, вычисляющую корни квадратного уравнения вида
# ax2 + bx + c = 0.
# Для вычисления квадратного корня воспользуйтесь функцией sqrt() модуля math
# import math
# math.sqrt(4) - вычисляет корень числа 4

import math

a = float(input("Коэффициент a = "))
b = float(input("Коэффициент b = "))
c = float(input("Коэффициент c = "))

# Дискриминант D квадратного трёхчлена ax2 + bx + c равен:
D = b**2 - 4 * a * c;
# Корни квадратного уравнения зависят от знака дискриминанта:
# D > 0 - уравнение имеет 2 различных корня;
if D > 0:
	x1 = (-b + math.sqrt(discr)) / (2 * a)
	x2 = (-b - math.sqrt(discr)) / (2 * a)
	print("x1 = %.2f \nx2 = %.2f" % (x1, x2))
# D = 0 - уравнение имеет 1 корень (или же 2 совпадающих корня):
elif D == 0:
	x = -b / (2 * a)
	print("x = %.2f" % x)
else:
	print("Корней нет")

 #прогонял на случайных числах и получал "корней нет". Но всё сделано на школьных формулах, возиться дальше не хотелось.





